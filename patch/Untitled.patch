diff --git a/NEWS b/NEWS
index 8cea8ff2..b864b5cc 100644
--- a/NEWS
+++ b/NEWS
@@ -1121,7 +1121,7 @@ Features:
 Specification:
  * docs: Describe the custom tag (Matthias Klumpp)
  * spec: Describe the new agreement tag (Matthias Klumpp)
- * docs: Clarify that the /usr/share/appdata/ path is legacy and should
+ * docs: Clarify that the /usr/local/share/appdata/ path is legacy and should
    not be used (Matthias Klumpp)
 
 Bugfixes:
@@ -2047,7 +2047,7 @@ Features:
 
 Specification:
  * docs: Explicitly define more minimally required tags per component type (Matthias Klumpp)
- * Make /usr/share/metainfo the canonical path for upstream metadata (Matthias Klumpp)
+ * Make /usr/local/share/metainfo the canonical path for upstream metadata (Matthias Klumpp)
  * spec: Make architecture a property of <components/>, and no tag (Matthias Klumpp)
  * spec: Update the cached icon DEP-11 specification to allow size information (Matthias Klumpp)
 
@@ -2364,7 +2364,7 @@ Bugfixes:
  * Clean up some dead code in Xapian wrapper (Matthias Klumpp)
  * Fix a couple of minor issues found by static code analysis (Matthias Klumpp)
  * asi: Always return a valid exit code (Matthias Klumpp)
- * Always search for data in /usr/share, ignore DATADIR (Aleix Pol)
+ * Always search for data in /usr/local/share, ignore DATADIR (Aleix Pol)
  * Correctly read and propagate language properties (Matthias Klumpp)
  * Add missing developer_name to database (Matthias Klumpp)
  * Improve database-writing code to ignore NULL values (Matthias Klumpp)
@@ -2684,7 +2684,7 @@ Specification:
  * docs: Some changes on ASXML for component-support (Matthias Klumpp)
  * docs: Clarify font classifier (Matthias Klumpp)
  * spec: Don't use specialized tags, everything is a component. Kill <id/> types (Matthias Klumpp)
- * spec: All upstream meta-info goes to /usr/share/appdata now (Matthias Klumpp)
+ * spec: All upstream meta-info goes to /usr/local/share/appdata now (Matthias Klumpp)
  * specs: Update Appstream example XML for latest changes (Matthias Klumpp)
  * specs: Add new <architectures/> tag to Appstream distro spec (Matthias Klumpp)
  * spec: Add "origin" property for components tag (Matthias Klumpp)
diff --git a/RELEASE b/RELEASE
index 6cac35da..3f582698 100644
--- a/RELEASE
+++ b/RELEASE
@@ -41,7 +41,7 @@ git push
 6. Upload tarball: scp -r *.tar.xz* annarchy.freedesktop.org:/srv/www.freedesktop.org/www/software/appstream/releases/
 
 7. Upload documentation:
-   scp -r build/release_install/usr/local/share/doc/appstream/html/* annarchy.freedesktop.org:/srv/www.freedesktop.org/www/software/appstream/docs/
+   scp -r build/release_install/usr/local/local/share/doc/appstream/html/* annarchy.freedesktop.org:/srv/www.freedesktop.org/www/software/appstream/docs/
 
 8. Do post release version bump in meson.build, RELEASE
 
diff --git a/autoformat.py b/autoformat.py
index 4ec2af33..b3fcbce2 100755
--- a/autoformat.py
+++ b/autoformat.py
@@ -1,4 +1,4 @@
-#!/usr/bin/env python3
+#!/usr/local/bin/env python3
 #
 # Copyright (C) 2015-2022 Matthias Klumpp <mak@debian.org>
 #
diff --git a/compose/asc-hint-tags.c b/compose/asc-hint-tags.c
index 2d51a59d..4dd4e0e8 100644
--- a/compose/asc-hint-tags.c
+++ b/compose/asc-hint-tags.c
@@ -154,14 +154,14 @@ AscHintTagStatic asc_hint_tag_list[] =  {
 	  AS_ISSUE_SEVERITY_WARNING,
 	  "Unable to add languages information, even though a <code>translation</code> tag was present in the MetaInfo file. "
 	  "Please check that its value is set correctly, and all locale files are placed in the right directories "
-	  "(e.g. <code>/usr/share/locale/*/LC_MESSAGES/</code> for Gettext .mo files)."
+	  "(e.g. <code>/usr/local/share/locale/*/LC_MESSAGES/</code> for Gettext .mo files)."
 	},
 
 	{ "icon-not-found",
 	  AS_ISSUE_SEVERITY_ERROR,
 	  "The icon <em>{{icon_fname}}</em> was not found in the archive. This issue can have multiple reasons, "
 	  "like the icon being in a wrong directory or not being available in a suitable size (at least 64x64px). "
-	  "To make the icon easier to find, place it in <code>/usr/share/icons/hicolor/&lt;size&gt;/apps</code> and ensure the <code>Icon=</code> value"
+	  "To make the icon easier to find, place it in <code>/usr/local/share/icons/hicolor/&lt;size&gt;/apps</code> and ensure the <code>Icon=</code> value"
 	  "of the desktop-entry file is set correctly."
 	},
 
diff --git a/compose/asc-utils-fonts.c b/compose/asc-utils-fonts.c
index 46ef6c39..68e83960 100644
--- a/compose/asc-utils-fonts.c
+++ b/compose/asc-utils-fonts.c
@@ -593,7 +593,7 @@ asc_process_fonts (AscResult *cres,
 		g_autofree gchar *basename = NULL;
 		g_autofree gchar *font_fullname_lower = NULL;
 		const gchar *fname = g_ptr_array_index (contents, i);
-		if (!g_str_has_prefix (fname, "/usr/share/fonts/"))
+		if (!g_str_has_prefix (fname, "/usr/local/share/fonts/"))
 			continue;
 		if (!g_str_has_suffix (fname, ".ttf") && !g_str_has_suffix (fname, ".otf"))
 			continue;
diff --git a/contrib/apt-conf/50appstream b/contrib/apt-conf/50appstream
index 0e32163c..c6158b60 100644
--- a/contrib/apt-conf/50appstream
+++ b/contrib/apt-conf/50appstream
@@ -73,5 +73,5 @@ Acquire::IndexTargets {
 
 # Refresh AppStream cache when APT's cache is updated (i.e. apt update)
 APT::Update::Post-Invoke-Success {
-    "if /usr/bin/test -w /var/cache/swcatalog -a -e /usr/bin/appstreamcli; then appstreamcli refresh --source=os > /dev/null || true; fi";
+    "if /usr/local/bin/test -w /var/cache/swcatalog -a -e /usr/local/bin/appstreamcli; then appstreamcli refresh --source=os > /dev/null || true; fi";
 };
diff --git a/contrib/coccinelle/run-coccinelle.sh b/contrib/coccinelle/run-coccinelle.sh
index 97c236a8..c1fd4583 100755
--- a/contrib/coccinelle/run-coccinelle.sh
+++ b/contrib/coccinelle/run-coccinelle.sh
@@ -1,4 +1,4 @@
-#!/usr/bin/env bash
+#!/usr/local/bin/env bash
 # SPDX-License-Identifier: LGPL-2.1-or-later
 set -e
 
@@ -21,7 +21,7 @@ for script in "${SCRIPTS[@]}"; do
     echo "--x-- Processing $script --x--"
     spatch \
         --smpl-spacing \
-        --macro-file "/usr/include/glib-2.0/glib/gmacros.h" \
+        --macro-file "/usr/local/include/glib-2.0/glib/gmacros.h" \
         --sp-file \
         "$script" \
         "${ARGS[@]}" \
diff --git a/data/update-data.py b/data/update-data.py
index c28175a6..8e58aeea 100755
--- a/data/update-data.py
+++ b/data/update-data.py
@@ -1,4 +1,4 @@
-#!/usr/bin/env python3
+#!/usr/local/bin/env python3
 #
 # Copyright (C) 2015-2022 Matthias Klumpp <mak@debian.org>
 #
diff --git a/docs/doc-build-helper.py b/docs/doc-build-helper.py
index b79cbcb4..3ee41dd3 100755
--- a/docs/doc-build-helper.py
+++ b/docs/doc-build-helper.py
@@ -1,4 +1,4 @@
-#!/usr/bin/env python3
+#!/usr/local/bin/env python3
 #
 # Copyright (C) 2016-2023 Matthias Klumpp <matthias@tenstral.net>
 #
@@ -30,7 +30,7 @@ from pathlib import Path
 
 
 # additional CSS from system locations, we use it if available
-EXTRA_CSS = [['/usr/share/javascript/highlight.js/styles/routeros.css', 'highlight.css']]
+EXTRA_CSS = [['/usr/local/share/javascript/highlight.js/styles/routeros.css', 'highlight.css']]
 
 
 def daps_build(src_dir, project_name, daps_exe):
diff --git a/docs/meson.build b/docs/meson.build
index 95681dd9..d1029a60 100644
--- a/docs/meson.build
+++ b/docs/meson.build
@@ -96,7 +96,7 @@ as_doc_src = [
     'xml/quickstart-translation.xml',
 ]
 
-hljs_installed_file = '/usr/share/javascript/highlight.js/highlight.min.js'
+hljs_installed_file = '/usr/local/share/javascript/highlight.js/highlight.min.js'
 if get_option('docs')
     daps_exe = find_program('daps')
     python_exe = find_program('python3', 'python')
diff --git a/docs/style/static/js/INFO.md b/docs/style/static/js/INFO.md
index 6e95673b..936b8d77 100644
--- a/docs/style/static/js/INFO.md
+++ b/docs/style/static/js/INFO.md
@@ -4,5 +4,5 @@ You can place a minified copy of [Highlight.js](https://highlightjs.org/) in thi
 directory to enable source-code highlighting in the documentation.
 
 In case a system-wide copy of `highlight.min.js` and its CSS files exists in
-`/usr/share/javascript/highlight.js/`, the buildsystem will automatically detect that
+`/usr/local/share/javascript/highlight.js/`, the buildsystem will automatically detect that
 and create symbolic links to these files when installing the documentation.
diff --git a/docs/xml/catalog-iconcache.xml b/docs/xml/catalog-iconcache.xml
index c01c9f82..56da4d66 100644
--- a/docs/xml/catalog-iconcache.xml
+++ b/docs/xml/catalog-iconcache.xml
@@ -20,7 +20,7 @@
 	<section id="spec-iconcache-location">
 		<title>Filesystem locations</title>
 		<para>
-			All icons of type <literal>cached</literal> must be placed in <filename>/usr/share/swcatalog/icons/%{origin}/%{size}/</filename> or <filename>/var/(lib|cache)/swcatalog/icons/%{origin}/%{size}/</filename>,
+			All icons of type <literal>cached</literal> must be placed in <filename>/usr/local/share/swcatalog/icons/%{origin}/%{size}/</filename> or <filename>/var/(lib|cache)/swcatalog/icons/%{origin}/%{size}/</filename>,
 			where <literal>origin</literal> is the AppStream data origin defined in the AppStream data file (see <xref linkend="spec-asxml-general"/>), and <literal>size</literal>
 			is <code>64x64</code> or <code>128x128</code> depending on the size of the icon. And icon might be present with different sizes in both directories.
 			When finding cached icons, they must only be searched for in the same location where the accompanying catalog metadata is located.
@@ -28,13 +28,13 @@
 		</para>
 		<para>
 			For example the cache icon <code>krita.png</code> of a component in a data file with the origin <code>jessie</code> should be stored in
-			<filename>/usr/share/swcatalog/icons/jessie/64x64/krita.png</filename> (or in the <filename>/var/cache</filename> location).
+			<filename>/usr/local/share/swcatalog/icons/jessie/64x64/krita.png</filename> (or in the <filename>/var/cache</filename> location).
 		</para>
 		<para>
 			Icon scaling factors commonly used for HiDPI display support are part of the size-directory filename and are separated from the regular size via an <code>@</code> sign.
 			If the scaling factor is 1, it must be omitted from the directory name.
 			For example, if the icon scaling factor is <literal>2</literal> for icons of size <literal>64x64</literal> from origin <literal>jessie</literal>, the icon must be placed
-			in <filename>/usr/share/swcatalog/icons/jessie/64x64@2/</filename>.
+			in <filename>/usr/local/share/swcatalog/icons/jessie/64x64@2/</filename>.
 		</para>
 		<note>
 			<title>Legacy Support</title>
diff --git a/docs/xml/catalog-xmldata.xml b/docs/xml/catalog-xmldata.xml
index 16f72e18..4d13c53e 100644
--- a/docs/xml/catalog-xmldata.xml
+++ b/docs/xml/catalog-xmldata.xml
@@ -26,7 +26,7 @@
 			3rd-party repositories use a vendor name and repository-name combination, for example Ubuntu PPAs might get <filename>ppa-ubuntu12.04-username-foobar.xml</filename>.
 		</para>
 		<para>
-			There are two valid locations to store AppStream XML data. <filename>/usr/share/swcatalog/xml</filename> stores all AppStream data which
+			There are two valid locations to store AppStream XML data. <filename>/usr/local/share/swcatalog/xml</filename> stores all AppStream data which
 			has been installed via software packages, while <filename>/var/lib/swcatalog/xml</filename> stores application data which was downloaded
 			by the package manager or placed there by other tools (for example, Limba).
 			The XML files can either be plain files or be compressed with gzip. It is always a good idea to compress the files, because they tend to become
@@ -36,7 +36,7 @@
 		<important>
 			<title>Legacy Path</title>
 			<para>
-				AppStream tools scan the paths <filename>/usr/share/app-info/(xml|xmls)</filename> / <filename>/var/lib/app-info/(xml|xmls)</filename> path for legacy
+				AppStream tools scan the paths <filename>/usr/local/share/app-info/(xml|xmls)</filename> / <filename>/var/lib/app-info/(xml|xmls)</filename> path for legacy
 				compatibility as well. If possible, the old locations and old layouts should not be used anymore.
 				Support for the legacy path will likely be dropped completely with a future AppStream 1.0 release.
 			</para>
@@ -318,7 +318,7 @@
 <icon type="cached">firefox.png</icon>
 <icon type="cached" width="128" height="128" scale="2">firefox.png</icon>
 <icon type="remote" width="64" height="64">https://example.com/icons/foobar.png</icon>
-<icon type="local" width="64" height="64">/usr/share/pixmaps/foobar.png</icon>]]></programlisting>
+<icon type="local" width="64" height="64">/usr/local/share/pixmaps/foobar.png</icon>]]></programlisting>
 					<para>
 						Multiple <code><![CDATA[<icon/>]]></code> tags might be combined for one application, for example to define a <literal>stock</literal> icon
 						and a <literal>cached</literal> icon.
diff --git a/docs/xml/catalog-yamldata.xml b/docs/xml/catalog-yamldata.xml
index 8e467ef1..87b6537f 100644
--- a/docs/xml/catalog-yamldata.xml
+++ b/docs/xml/catalog-yamldata.xml
@@ -34,7 +34,7 @@
 		<title>File naming and location</title>
 		<para>
 			Take a look at <xref linkend="spec-asxml-filenaming"/> for AppStream XML files. While the XML data belongs into the <filename>xml</filename> subdirectory in
-			<filename>/usr/share/swcatalog</filename> (or <filename>/var/cache/swcatalog</filename>), the YAML data is stored in the <filename>yaml</filename> subdirectory.
+			<filename>/usr/local/share/swcatalog</filename> (or <filename>/var/cache/swcatalog</filename>), the YAML data is stored in the <filename>yaml</filename> subdirectory.
 			All other rules affecting the XML apply the DEP-11 YAML as well, including the recommendation to compress the files with gzip and the icon search logic.
 		</para>
 	</section>
diff --git a/docs/xml/metainfo-addon.xml b/docs/xml/metainfo-addon.xml
index 29e10633..7acd4fdd 100644
--- a/docs/xml/metainfo-addon.xml
+++ b/docs/xml/metainfo-addon.xml
@@ -15,7 +15,7 @@
 			The <literal>addon</literal> component type exists to reflect that.
 		</para>
 		<para>
-			Software which provides addons can ship one or more files in <filename>/usr/share/metainfo/%{id}.metainfo.xml</filename>.
+			Software which provides addons can ship one or more files in <filename>/usr/local/share/metainfo/%{id}.metainfo.xml</filename>.
 		</para>
 	</section>
 
diff --git a/docs/xml/metainfo-codec.xml b/docs/xml/metainfo-codec.xml
index 3962779c..016f0eae 100644
--- a/docs/xml/metainfo-codec.xml
+++ b/docs/xml/metainfo-codec.xml
@@ -13,7 +13,7 @@
 			Software centers might want to special-case codec handling. Therefore, we provide a component type for them.
 		</para>
 		<para>
-			Codecs can ship one or more files in <filename>/usr/share/metainfo/%{id}.metainfo.xml</filename>.
+			Codecs can ship one or more files in <filename>/usr/local/share/metainfo/%{id}.metainfo.xml</filename>.
 		</para>
 		<para>
 			Codec metadata files can – just like all other metainfo files – be translated. See the section about translation for more information.
diff --git a/docs/xml/metainfo-component.xml b/docs/xml/metainfo-component.xml
index 088926ac..abe460d4 100644
--- a/docs/xml/metainfo-component.xml
+++ b/docs/xml/metainfo-component.xml
@@ -30,7 +30,7 @@
 	<title>Filesystem locations</title>
 
 	<para>
-		Upstream projects can ship one or more metainfo files in <filename>/usr/share/metainfo/%{id}.metainfo.xml</filename>, where <literal>id</literal> is a unique
+		Upstream projects can ship one or more metainfo files in <filename>/usr/local/share/metainfo/%{id}.metainfo.xml</filename>, where <literal>id</literal> is a unique
 		identifier of this specific component.
 	</para>
 	<note>
@@ -43,7 +43,7 @@
 	<important>
 		<title>Legacy Path</title>
 		<para>
-			AppStream tools scan the <filename>/usr/share/appdata/</filename> path for legacy compatibility as well. It should not be used
+			AppStream tools scan the <filename>/usr/local/share/appdata/</filename> path for legacy compatibility as well. It should not be used
 			anymore by new software though, even on older Linux distributions (like RHEL 7 and Ubuntu 16.04 LTS) the metainfo path is well
 			supported.
 			Support for the legacy path will likely be dropped completely with a future AppStream 1.0 release.
@@ -529,7 +529,7 @@
 				<title>Local Release Data</title>
 				<para>
 					Please note that even if release data is external and also provided on a remote location, it also <emphasis>must</emphasis> be
-					available locally, installed as a file into <filename>/usr/share/metainfo/releases/%{cid}.releases.xml</filename>.
+					available locally, installed as a file into <filename>/usr/local/share/metainfo/releases/%{cid}.releases.xml</filename>.
 					The local file may not contain all information (for example it may not have a complete release description or all translations),
 					but basic data such as the released versions and their release dates should be present.
 				</para>
@@ -579,7 +579,7 @@
 				<term>&lt;library/&gt;</term>
 				<listitem>
 				<para>
-					Contains the name of a shared library placed in a publicly accessible library path, such as <filename>/usr/lib</filename>, <filename>/usr/lib/&lt;triplet&gt;</filename>
+					Contains the name of a shared library placed in a publicly accessible library path, such as <filename>/usr/local/lib</filename>, <filename>/usr/local/lib/&lt;triplet&gt;</filename>
 					or <filename>/lib</filename>.
 					For example, for the <literal>libappstream</literal> library, the value for <literal>library</literal> would be <code>libappstream.so.1</code>.
 				</para>
diff --git a/docs/xml/metainfo-consoleapp.xml b/docs/xml/metainfo-consoleapp.xml
index 07225ce5..cd87d469 100644
--- a/docs/xml/metainfo-consoleapp.xml
+++ b/docs/xml/metainfo-consoleapp.xml
@@ -19,7 +19,7 @@
 		</para>
 		<para>
 			In order to enhance the available metadata about their application, projects shipping a console application can ship one or more metainfo files
-			in <filename>/usr/share/metainfo/%{id}.metainfo.xml</filename>.
+			in <filename>/usr/local/share/metainfo/%{id}.metainfo.xml</filename>.
 		</para>
 
 	</section>
diff --git a/docs/xml/metainfo-desktopapp.xml b/docs/xml/metainfo-desktopapp.xml
index f100249a..6c86e6a4 100644
--- a/docs/xml/metainfo-desktopapp.xml
+++ b/docs/xml/metainfo-desktopapp.xml
@@ -26,7 +26,7 @@
 		<para>
 			The metainfo files override any values which are automatically fetched from other sources by the AppStream data generator, which means that its data will always take precedence over
 			data which has already been defined in a <filename>.desktop</filename> file.
-			Applications can ship one or more files in <filename>/usr/share/metainfo/%{id}.metainfo.xml</filename>.
+			Applications can ship one or more files in <filename>/usr/local/share/metainfo/%{id}.metainfo.xml</filename>.
 		</para>
 		<para>
 			Data will only be fetched from a desktop file if one <xref linkend="tag-dapp-launchable"/> tag is present to define a .desktop file ID. If multiple <literal>launchable</literal> tags are
@@ -40,7 +40,7 @@
 		</note>
 		<note>
 			<para>
-				While <literal>desktop-application</literal> metadata is commonly stored in <filename>/usr/share/metainfo/%{id}.metainfo.xml</filename> (with a <filename>.metainfo.xml</filename> extension),
+				While <literal>desktop-application</literal> metadata is commonly stored in <filename>/usr/local/share/metainfo/%{id}.metainfo.xml</filename> (with a <filename>.metainfo.xml</filename> extension),
 				using a <filename>.appdata.xml</filename> extension is also permitted for this component type for legacy compatibility.
 				AppStream implementations will recognize either file type, as long as it ends up in the right location on the filesystem.
 			</para>
diff --git a/docs/xml/metainfo-driver.xml b/docs/xml/metainfo-driver.xml
index 15f75bfa..60c43dd0 100644
--- a/docs/xml/metainfo-driver.xml
+++ b/docs/xml/metainfo-driver.xml
@@ -15,7 +15,7 @@
 			It usually <literal>provides</literal> one or multiple modaliases.
 		</para>
 		<para>
-			Drivers can ship one or more files in <filename>/usr/share/metainfo/%{id}.metainfo.xml</filename>.
+			Drivers can ship one or more files in <filename>/usr/local/share/metainfo/%{id}.metainfo.xml</filename>.
 		</para>
 	</section>
 
diff --git a/docs/xml/metainfo-firmware.xml b/docs/xml/metainfo-firmware.xml
index 6604d3d3..40da6045 100644
--- a/docs/xml/metainfo-firmware.xml
+++ b/docs/xml/metainfo-firmware.xml
@@ -16,7 +16,7 @@
 			Additionally, this component type can also be used for firmware which is loaded onto the device at runtime.
 		</para>
 		<para>
-			Firmware can ship one or more files in <filename>/usr/share/metainfo/%{id}.metainfo.xml</filename>.
+			Firmware can ship one or more files in <filename>/usr/local/share/metainfo/%{id}.metainfo.xml</filename>.
 		</para>
 	</section>
 
diff --git a/docs/xml/metainfo-font.xml b/docs/xml/metainfo-font.xml
index 1db37251..410ebf4b 100644
--- a/docs/xml/metainfo-font.xml
+++ b/docs/xml/metainfo-font.xml
@@ -16,7 +16,7 @@
 			This metainfo specification describes how metadata for fonts or font collections should be structured.
 		</para>
 		<para>
-			Font packages can ship one or more files in <filename>/usr/share/metainfo/%{id}.metainfo.xml</filename>.
+			Font packages can ship one or more files in <filename>/usr/local/share/metainfo/%{id}.metainfo.xml</filename>.
 		</para>
 		<para>
 			Font metadata files can – just like all other metainfo files – be translated. See the section about translation for more information.
diff --git a/docs/xml/metainfo-icontheme.xml b/docs/xml/metainfo-icontheme.xml
index fbc574e8..1361e252 100644
--- a/docs/xml/metainfo-icontheme.xml
+++ b/docs/xml/metainfo-icontheme.xml
@@ -15,7 +15,7 @@
 			This metainfo specification describes how metadata for icon themes should be structured.
 		</para>
 		<para>
-			Icon theme packages can ship one or more files in <filename>/usr/share/metainfo/%{id}.metainfo.xml</filename>.
+			Icon theme packages can ship one or more files in <filename>/usr/local/share/metainfo/%{id}.metainfo.xml</filename>.
 		</para>
 		<para>
 			Icon theme metadata files can – just like all other metainfo files – be translated. See the section about translation for more information.
diff --git a/docs/xml/metainfo-inputmethod.xml b/docs/xml/metainfo-inputmethod.xml
index 2457e646..8d202c29 100644
--- a/docs/xml/metainfo-inputmethod.xml
+++ b/docs/xml/metainfo-inputmethod.xml
@@ -15,7 +15,7 @@
 		</para>
 		<para>
 			Software components providing an input method can ship one or more files in
-			<filename>/usr/share/metainfo/%{id}.metainfo.xml</filename>.
+			<filename>/usr/local/share/metainfo/%{id}.metainfo.xml</filename>.
 		</para>
 		<para>
 			Input method metadata files can – just like all other metainfo files – be translated. See the section about translation for more information.
diff --git a/docs/xml/metainfo-localization.xml b/docs/xml/metainfo-localization.xml
index 9cf19f6f..6fc21fe6 100644
--- a/docs/xml/metainfo-localization.xml
+++ b/docs/xml/metainfo-localization.xml
@@ -17,7 +17,7 @@
 			languages it provides via its <literal>languages</literal> tag.
 		</para>
 		<para>
-			Language packs can ship one or more metainfo files as <filename>/usr/share/metainfo/%{id}.metainfo.xml</filename>.
+			Language packs can ship one or more metainfo files as <filename>/usr/local/share/metainfo/%{id}.metainfo.xml</filename>.
 		</para>
 		<para>
 			Do not confuse language packs with the catalog metadata <xref linkend="tag-ct-languages"/> tag, used to identify bundled translations.
diff --git a/docs/xml/metainfo-operatingsystem.xml b/docs/xml/metainfo-operatingsystem.xml
index e54bdb35..36e4e13e 100644
--- a/docs/xml/metainfo-operatingsystem.xml
+++ b/docs/xml/metainfo-operatingsystem.xml
@@ -14,7 +14,7 @@
 			like Debian, Fedora, RHEL, etc. or Windows and macOS.
 		</para>
 		<para>
-			Operating systems can ship metainfo files in <filename>/usr/share/metainfo/%{id}.metainfo.xml</filename>.
+			Operating systems can ship metainfo files in <filename>/usr/local/share/metainfo/%{id}.metainfo.xml</filename>.
 		</para>
 	</section>
 
diff --git a/docs/xml/metainfo-repository.xml b/docs/xml/metainfo-repository.xml
index 8b10b316..67362581 100644
--- a/docs/xml/metainfo-repository.xml
+++ b/docs/xml/metainfo-repository.xml
@@ -21,7 +21,7 @@
 		</para>
 		<para>
 			In order to add metadata about a software repository, projects can provide one or more metainfo files
-			in <filename>/usr/share/metainfo/%{id}.metainfo.xml</filename>.
+			in <filename>/usr/local/share/metainfo/%{id}.metainfo.xml</filename>.
 		</para>
 
 	</section>
diff --git a/docs/xml/metainfo-runtime.xml b/docs/xml/metainfo-runtime.xml
index 5d950a43..b13e7f27 100644
--- a/docs/xml/metainfo-runtime.xml
+++ b/docs/xml/metainfo-runtime.xml
@@ -17,7 +17,7 @@
 			used by others and may even be directly distributed as part of tranditional Linux distributions.
 		</para>
 		<para>
-			Runtimes can ship metainfo files in <filename>/usr/share/metainfo/%{id}.metainfo.xml</filename>.
+			Runtimes can ship metainfo files in <filename>/usr/local/share/metainfo/%{id}.metainfo.xml</filename>.
 		</para>
 	</section>
 
diff --git a/docs/xml/metainfo-service.xml b/docs/xml/metainfo-service.xml
index 46ea2911..02f59990 100644
--- a/docs/xml/metainfo-service.xml
+++ b/docs/xml/metainfo-service.xml
@@ -19,7 +19,7 @@
 		</para>
 		<para>
 			In order to enhance the available metadata about their services, projects shipping a service can ship one or more metainfo files
-			in <filename>/usr/share/metainfo/%{id}.metainfo.xml</filename>.
+			in <filename>/usr/local/share/metainfo/%{id}.metainfo.xml</filename>.
 		</para>
 
 	</section>
diff --git a/docs/xml/metainfo-webapp.xml b/docs/xml/metainfo-webapp.xml
index 12d789d7..620c3219 100644
--- a/docs/xml/metainfo-webapp.xml
+++ b/docs/xml/metainfo-webapp.xml
@@ -20,7 +20,7 @@
 			A web application metainfo file is special in the regard that it is usually not combined with the software it is describing and that it has no
 			installable.
 			It usually is equivalent to a weblink that gets special treatment by software centers. Web application metainfo files are therefore
-			injected directly into the catalog metadata generation process, or can be installed as usual into <filename>/usr/share/metainfo/%{id}.metainfo.xml</filename>.
+			injected directly into the catalog metadata generation process, or can be installed as usual into <filename>/usr/local/share/metainfo/%{id}.metainfo.xml</filename>.
 		</para>
 		<para>
 			Software centers may display web applications in special, chrome-less web browser windows to achieve better desktop integration and
diff --git a/docs/xml/quickstart-addons.xml b/docs/xml/quickstart-addons.xml
index 72c959c1..c93f8fe4 100644
--- a/docs/xml/quickstart-addons.xml
+++ b/docs/xml/quickstart-addons.xml
@@ -18,7 +18,7 @@
 			to offer installing missing addons from within the application.
 		</para>
 		<para>
-			Software which provides addons can ship one or more files in <filename>/usr/share/metainfo/%{id}.metainfo.xml</filename>.
+			Software which provides addons can ship one or more files in <filename>/usr/local/share/metainfo/%{id}.metainfo.xml</filename>.
 		</para>
 		<tip>
 			<para>
diff --git a/docs/xml/quickstart-desktopapps.xml b/docs/xml/quickstart-desktopapps.xml
index 07a1458d..038c5053 100644
--- a/docs/xml/quickstart-desktopapps.xml
+++ b/docs/xml/quickstart-desktopapps.xml
@@ -26,7 +26,7 @@
 		</para>
 		<para>
 			The application-metainfo files override any values which are automatically fetched by the AppStream data generator.
-			Applications can ship one or more files in <filename>/usr/share/metainfo/%{id}.metainfo.xml</filename>.
+			Applications can ship one or more files in <filename>/usr/local/share/metainfo/%{id}.metainfo.xml</filename>.
 		</para>
 		<para>
 			Application metainfo files can - just like all other metainfo files - be translated. See the section about translation for more information about that.
diff --git a/docs/xml/releases-data.xml b/docs/xml/releases-data.xml
index ee3066de..9741d8c8 100644
--- a/docs/xml/releases-data.xml
+++ b/docs/xml/releases-data.xml
@@ -31,7 +31,7 @@
 			If the <literal>releases</literal> XML is external, the metainfo file must contain a <xref linkend="tag-releases"/> tag with the <literal>type</literal>
 			property set to <code>external</code> as described for component XML.
 			The data described in this section is placed in a separate XML file with <literal>releases</literal> being its root node.
-			The file must be installed as <filename>/usr/share/metainfo/releases/%{cid}.releases.xml</filename>, where <code>cid</code> is the component ID of the component
+			The file must be installed as <filename>/usr/local/share/metainfo/releases/%{cid}.releases.xml</filename>, where <code>cid</code> is the component ID of the component
 			the release information belongs to.
 		</para>
 	</section>
diff --git a/meson.build b/meson.build
index 7ae859c6..4c2bc836 100644
--- a/meson.build
+++ b/meson.build
@@ -166,10 +166,10 @@ endif
 stemmer_inc_dirs = include_directories()
 if get_option('stemming')
     stemmer_lib = cc.find_library('stemmer', required: true)
-    stemmer_inc_dirs = include_directories(['/usr/include'])
+    stemmer_inc_dirs = include_directories(['/usr/local/include'])
     if not cc.has_header('libstemmer.h')
         if cc.has_header('libstemmer/libstemmer.h')
-            stemmer_inc_dirs = include_directories('/usr/include/libstemmer')
+            stemmer_inc_dirs = include_directories('/usr/local/include/libstemmer')
         else
             error('Unable to find Snowball header "libstemmer.h". Please ensure libstemmer/Snowball is installed properly in order to continue.')
         endif
diff --git a/qt/cmake/AppStreamQt5Config.cmake.in b/qt/cmake/AppStreamQt5Config.cmake.in
index 0bef7e80..37b69d6c 100644
--- a/qt/cmake/AppStreamQt5Config.cmake.in
+++ b/qt/cmake/AppStreamQt5Config.cmake.in
@@ -2,7 +2,7 @@
 get_filename_component(PACKAGE_PREFIX_DIR "${CMAKE_CURRENT_LIST_DIR}/../../../../" ABSOLUTE)
 
 # Use original install prefix when loaded through a "/usr move"
-# cross-prefix symbolic link such as /lib -> /usr/lib.
+# cross-prefix symbolic link such as /lib -> /usr/local/lib.
 get_filename_component(_realCurr "${CMAKE_CURRENT_LIST_DIR}" REALPATH)
 get_filename_component(_realOrig "@LIBDIR_FULL@/cmake/AppStreamQt5" REALPATH)
 if(_realCurr STREQUAL _realOrig)
diff --git a/qt/cmake/AppStreamQtConfig.cmake.in b/qt/cmake/AppStreamQtConfig.cmake.in
index 0e3eb118..dc0406e5 100644
--- a/qt/cmake/AppStreamQtConfig.cmake.in
+++ b/qt/cmake/AppStreamQtConfig.cmake.in
@@ -2,7 +2,7 @@
 get_filename_component(PACKAGE_PREFIX_DIR "${CMAKE_CURRENT_LIST_DIR}/../../../../" ABSOLUTE)
 
 # Use original install prefix when loaded through a "/usr move"
-# cross-prefix symbolic link such as /lib -> /usr/lib.
+# cross-prefix symbolic link such as /lib -> /usr/local/lib.
 get_filename_component(_realCurr "${CMAKE_CURRENT_LIST_DIR}" REALPATH)
 get_filename_component(_realOrig "@LIBDIR_FULL@/cmake/AppStreamQt" REALPATH)
 if(_realCurr STREQUAL _realOrig)
diff --git a/src/as-context.c b/src/as-context.c
index 969debc1..e13c5c26 100644
--- a/src/as-context.c
+++ b/src/as-context.c
@@ -612,7 +612,7 @@ as_context_ensure_os_config_loaded (AsContext *ctx)
 	if (priv->free_origin_globs != NULL)
 		return;
 
-	/* load data from /etc, but fall back to the default in /usr/share if the override does not exist */
+	/* load data from /etc, but fall back to the default in /usr/local/share if the override does not exist */
 	as_config_fname = SYSCONFDIR "/appstream.conf";
 	if (!g_file_test (as_config_fname, G_FILE_TEST_EXISTS))
 		as_config_fname = AS_DATADIR "/appstream.conf";
diff --git a/src/as-distro-extras.c b/src/as-distro-extras.c
index 5192e087..b6155f0a 100644
--- a/src/as-distro-extras.c
+++ b/src/as-distro-extras.c
@@ -358,7 +358,7 @@ as_pool_scan_apt (AsPool *pool, gboolean force, GError **error)
 	 * So, we hereby simply "own" the icons directory and all it's contents, anything put in there by 3rd-parties will
 	 * be deleted.
 	 * (And there should actually be no cases 3rd-parties put icons there on a Debian machine, since metadata in packages
-	 * will land in /usr/share/swcatalog anyway)
+	 * will land in /usr/local/share/swcatalog anyway)
 	 */
 	as_utils_delete_dir_recursive (appstream_icons_target);
 
diff --git a/src/as-pool.c b/src/as-pool.c
index 04005b4e..97eb47f8 100644
--- a/src/as-pool.c
+++ b/src/as-pool.c
@@ -103,16 +103,16 @@ static guint signals[SIGNAL_LAST] = { 0 };
 /* Prefixes of locations where system-wide AppStream catalog metadata can be found.
  * TODO: We should really parse $XDG_DATA_DIRS for the /usr location in a safe way,
  * instead of hardcoding one canonical path here. */
-static const gchar *SYSTEM_CATALOG_METADATA_PREFIXES[] = { "/usr/share",
+static const gchar *SYSTEM_CATALOG_METADATA_PREFIXES[] = { "/usr/local/share",
 							   "/var/lib",
 							   "/var/cache",
 							   NULL };
 
 /* where .desktop files are installed to by packages to be registered with the system */
-static gchar *APPLICATIONS_DIR = "/usr/share/applications";
+static gchar *APPLICATIONS_DIR = "/usr/local/share/applications";
 
 /* where metainfo files can be found */
-static gchar *METAINFO_DIR = "/usr/share/metainfo";
+static gchar *METAINFO_DIR = "/usr/local/share/metainfo";
 
 /* cache key used for local metainfo / desktop-entry data */
 static gchar *LOCAL_METAINFO_CACHE_KEY = "local-metainfo";
diff --git a/src/as-system-info.c b/src/as-system-info.c
index f0f0c64f..ff490620 100644
--- a/src/as-system-info.c
+++ b/src/as-system-info.c
@@ -220,7 +220,7 @@ as_system_info_load_os_release (AsSystemInfo *sysinfo, const gchar *os_release_f
 		if (g_file_test ("/etc/os-release", G_FILE_TEST_EXISTS))
 			os_release_fname = "/etc/os-release";
 		else
-			os_release_fname = "/usr/lib/os-release";
+			os_release_fname = "/usr/local/lib/os-release";
 	}
 
 	/* get details about the distribution we are running on */
diff --git a/src/as-utils.c b/src/as-utils.c
index dffa6242..88a0d1cf 100644
--- a/src/as-utils.c
+++ b/src/as-utils.c
@@ -2294,7 +2294,7 @@ static const gchar *
 as_metadata_location_get_prefix (AsMetadataLocation location)
 {
 	if (location == AS_METADATA_LOCATION_SHARED)
-		return "/usr/share";
+		return "/usr/local/share";
 	if (location == AS_METADATA_LOCATION_CACHE)
 		return "/var/cache";
 	if (location == AS_METADATA_LOCATION_STATE)
diff --git a/src/as-validator-issue-tag.h b/src/as-validator-issue-tag.h
index 4c7d1296..8a85c7f0 100644
--- a/src/as-validator-issue-tag.h
+++ b/src/as-validator-issue-tag.h
@@ -839,7 +839,7 @@ AsValidatorIssueTag as_validator_issue_tag_list[] =  {
 
 	{ "metainfo-legacy-path",
 	  AS_ISSUE_SEVERITY_WARNING,
-	  N_("The metainfo file is stored in a legacy path. Please place it in `/usr/share/metainfo/`."),
+	  N_("The metainfo file is stored in a legacy path. Please place it in `/usr/local/share/metainfo/`."),
 	},
 
 	{ "metainfo-multiple-components",
diff --git a/tests/test-compose.c b/tests/test-compose.c
index 12bfdf02..196f0391 100644
--- a/tests/test-compose.c
+++ b/tests/test-compose.c
@@ -670,8 +670,8 @@ test_compose_directory_unit (void)
 	g_assert_cmpstr (g_ptr_array_index (contents, 5), ==, "/table.svgz");
 
 	/* read existent data */
-	g_assert_true (asc_unit_file_exists (ASC_UNIT (dirunit), "/usr/dummy"));
-	data = asc_unit_read_data (ASC_UNIT (dirunit), "/usr/dummy", &error);
+	g_assert_true (asc_unit_file_exists (ASC_UNIT (dirunit), "/usr/local/dummy"));
+	data = asc_unit_read_data (ASC_UNIT (dirunit), "/usr/local/dummy", &error);
 	g_assert_no_error (error);
 	g_assert_nonnull (data);
 	g_assert_cmpstr ((const gchar *) g_bytes_get_data (data, NULL), ==, "Hello Universe!\n");
diff --git a/tests/test-pool.c b/tests/test-pool.c
index 78664f2a..6cf3ca21 100644
--- a/tests/test-pool.c
+++ b/tests/test-pool.c
@@ -758,7 +758,7 @@ test_filemonitor_dir (void)
 	guint cnt_changed = 0;
 	g_autoptr(AsFileMonitor) mon = NULL;
 	g_autoptr(GError) error = NULL;
-	const gchar *tmpdir = "/tmp/as-monitor-test/usr/share/appstream/xml";
+	const gchar *tmpdir = "/tmp/as-monitor-test/usr/local/share/appstream/xml";
 	g_autofree gchar *tmpfile = NULL;
 	g_autofree gchar *tmpfile_new = NULL;
 	g_autofree gchar *cmd_touch = NULL;
diff --git a/tools/ascli-actions-pkgmgr.c b/tools/ascli-actions-pkgmgr.c
index a6807b29..19861169 100644
--- a/tools/ascli-actions-pkgmgr.c
+++ b/tools/ascli-actions-pkgmgr.c
@@ -42,12 +42,12 @@ exec_pm_action (const gchar *action, gchar **pkgnames)
 	g_auto(GStrv) cmd = NULL;
 
 #ifdef HAVE_APT_SUPPORT
-	if (g_file_test ("/usr/bin/apt", G_FILE_TEST_EXISTS))
-		exe = "/usr/bin/apt";
+	if (g_file_test ("/usr/local/bin/apt", G_FILE_TEST_EXISTS))
+		exe = "/usr/local/bin/apt";
 #endif
 	if (exe == NULL) {
-		if (g_file_test ("/usr/bin/pkcon", G_FILE_TEST_EXISTS)) {
-			exe = "/usr/bin/pkcon";
+		if (g_file_test ("/usr/local/bin/pkcon", G_FILE_TEST_EXISTS)) {
+			exe = "/usr/local/bin/pkcon";
 		} else {
 			g_printerr ("%s\n",
 				    _("No suitable package manager CLI found. Please make sure that e.g. \"pkcon\" (part of PackageKit) is available."));
@@ -80,7 +80,7 @@ exec_flatpak_action (const gchar *action, const gchar *bundle_id)
 	const gchar *exe = NULL;
 	g_auto(GStrv) cmd = NULL;
 
-	exe = "/usr/bin/flatpak";
+	exe = "/usr/local/bin/flatpak";
 	if (!g_file_test (exe, G_FILE_TEST_EXISTS)) {
 		g_printerr ("%s\n", _("Flatpak was not found! Please install it to continue."));
 		return ASCLI_EXIT_CODE_FAILED;
